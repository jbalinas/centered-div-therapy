{"ast":null,"code":"var _jsxFileName = \"/Users/spookybiscuit/Projects/centered-div-therapy/src/components/MainContent.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { Container, TextField, Button, Typography, List, ListItem, ListItemText, Box } from '@mui/material';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MainContent = () => {\n  _s();\n  const [input, setInput] = useState('');\n  const [responseMessage, setResponseMessage] = useState('');\n  const [error, setError] = useState('');\n  const [dataList, setDataList] = useState([]);\n  const [divMessage, setDivMessage] = useState('I am perfectly centered.');\n  const [windowSize, setWindowSize] = useState({\n    width: window.innerWidth,\n    height: window.innerHeight\n  });\n  const [chatHistory, setChatHistory] = useState([]);\n  const fetchData = async () => {\n    try {\n      const response = await axios.get('http://localhost:5001/data');\n      setDataList(response.data);\n    } catch (err) {\n      console.error('Error fetching data:', err);\n    }\n  };\n  const sendData = async () => {\n    try {\n      const response = await axios.post('http://localhost:5001/data', {\n        input\n      });\n      setResponseMessage(response.data.message);\n      setError('');\n      fetchData(); // Refresh the data list after successful submission\n    } catch (err) {\n      console.error('Error sending data:', err);\n      setResponseMessage('');\n      setError('Could not send data to the backend.');\n    }\n  };\n  const handleChatSubmit = e => {\n    e.preventDefault();\n    if (input.trim() === '') {\n      setError('Message cannot be empty.');\n      return;\n    }\n\n    // Append user message to chat history\n    const userMessage = {\n      type: 'user',\n      text: input\n    };\n    const botMessage = {\n      type: 'bot',\n      text: generateBotResponse(input)\n    };\n    setChatHistory(prevHistory => [...prevHistory, userMessage, botMessage]);\n    setInput('');\n  };\n  const generateBotResponse = message => {\n    if (message.toLowerCase().includes('hello')) {\n      return 'Oh, hi there! Feeling a bit off-center today?';\n    } else if (message.toLowerCase().includes('move')) {\n      return 'Please donâ€™t move me! I like being centered. ðŸ˜ ';\n    } else {\n      return 'Hmm, Iâ€™m not sure how to respond to that.';\n    }\n  };\n  useEffect(() => {\n    fetchData();\n  }, []);\n  useEffect(() => {\n    const handleResize = () => {\n      const newWidth = window.innerWidth;\n      const newHeight = window.innerHeight;\n      setWindowSize({\n        width: newWidth,\n        height: newHeight\n      });\n      if (newWidth < 600) {\n        setDivMessage('Why is it so cramped in here? ðŸ¥´');\n      } else if (newWidth > 1200) {\n        setDivMessage('I feel so exposed! ðŸ˜±');\n      } else {\n        setDivMessage('I am perfectly centered.');\n      }\n    };\n    window.addEventListener('resize', handleResize);\n    return () => window.removeEventListener('resize', handleResize);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(Container, {\n    maxWidth: \"sm\",\n    style: {\n      padding: '2rem',\n      textAlign: 'center'\n    },\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h4\",\n      gutterBottom: true,\n      children: \"Centered Div Therapy\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"body1\",\n      gutterBottom: true,\n      style: {\n        marginBottom: '1rem',\n        fontStyle: 'italic'\n      },\n      children: divMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"body2\",\n      style: {\n        marginBottom: '1rem'\n      },\n      children: `Window Size: ${windowSize.width}px x ${windowSize.height}px`\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        border: '1px solid #ccc',\n        borderRadius: '10px',\n        padding: '1rem',\n        marginBottom: '1.5rem',\n        height: '200px',\n        overflowY: 'auto'\n      },\n      children: chatHistory.map((chat, index) => /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"body1\",\n        align: chat.type === 'user' ? 'right' : 'left',\n        style: {\n          color: chat.type === 'user' ? 'blue' : 'green',\n          marginBottom: '0.5rem'\n        },\n        children: chat.text\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleChatSubmit,\n      style: {\n        marginBottom: '2rem'\n      },\n      children: [/*#__PURE__*/_jsxDEV(TextField, {\n        fullWidth: true,\n        variant: \"outlined\",\n        label: \"Type your message\",\n        value: input,\n        onChange: e => setInput(e.target.value),\n        error: !!error,\n        helperText: error,\n        style: {\n          marginBottom: '1rem'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        color: \"primary\",\n        type: \"submit\",\n        style: {\n          width: '100%'\n        },\n        children: \"Send\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h5\",\n      gutterBottom: true,\n      children: dataList.length > 0 ? `Submitted Data (${dataList.length} items)` : 'No Data Submitted Yet'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(List, {\n      children: dataList.map((item, index) => /*#__PURE__*/_jsxDEV(ListItem, {\n        children: /*#__PURE__*/_jsxDEV(ListItemText, {\n          primary: item.input,\n          secondary: `Submitted on: ${item.timestamp}`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 164,\n          columnNumber: 25\n        }, this)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 98,\n    columnNumber: 9\n  }, this);\n};\n_s(MainContent, \"G/b5A4mt24KrR5ynZAeiSF5PKp8=\");\n_c = MainContent;\nexport default MainContent;\nvar _c;\n$RefreshReg$(_c, \"MainContent\");","map":{"version":3,"names":["React","useState","useEffect","axios","Container","TextField","Button","Typography","List","ListItem","ListItemText","Box","jsxDEV","_jsxDEV","MainContent","_s","input","setInput","responseMessage","setResponseMessage","error","setError","dataList","setDataList","divMessage","setDivMessage","windowSize","setWindowSize","width","window","innerWidth","height","innerHeight","chatHistory","setChatHistory","fetchData","response","get","data","err","console","sendData","post","message","handleChatSubmit","e","preventDefault","trim","userMessage","type","text","botMessage","generateBotResponse","prevHistory","toLowerCase","includes","handleResize","newWidth","newHeight","addEventListener","removeEventListener","maxWidth","style","padding","textAlign","children","variant","gutterBottom","fileName","_jsxFileName","lineNumber","columnNumber","marginBottom","fontStyle","sx","border","borderRadius","overflowY","map","chat","index","align","color","onSubmit","fullWidth","label","value","onChange","target","helperText","length","item","primary","secondary","timestamp","_c","$RefreshReg$"],"sources":["/Users/spookybiscuit/Projects/centered-div-therapy/src/components/MainContent.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport {\n    Container,\n    TextField,\n    Button,\n    Typography,\n    List,\n    ListItem,\n    ListItemText,\n    Box,\n} from '@mui/material';\n\nconst MainContent = () => {\n    const [input, setInput] = useState('');\n    const [responseMessage, setResponseMessage] = useState('');\n    const [error, setError] = useState('');\n    const [dataList, setDataList] = useState([]);\n    const [divMessage, setDivMessage] = useState('I am perfectly centered.');\n    const [windowSize, setWindowSize] = useState({\n        width: window.innerWidth,\n        height: window.innerHeight,\n    });\n    const [chatHistory, setChatHistory] = useState([]);\n\n    const fetchData = async () => {\n        try {\n            const response = await axios.get('http://localhost:5001/data');\n            setDataList(response.data);\n        } catch (err) {\n            console.error('Error fetching data:', err);\n        }\n    };\n\n    const sendData = async () => {\n        try {\n            const response = await axios.post('http://localhost:5001/data', { input });\n            setResponseMessage(response.data.message);\n            setError('');\n            fetchData(); // Refresh the data list after successful submission\n        } catch (err) {\n            console.error('Error sending data:', err);\n            setResponseMessage('');\n            setError('Could not send data to the backend.');\n        }\n    };\n\n    const handleChatSubmit = (e) => {\n        e.preventDefault();\n        if (input.trim() === '') {\n            setError('Message cannot be empty.');\n            return;\n        }\n\n        // Append user message to chat history\n        const userMessage = { type: 'user', text: input };\n        const botMessage = { type: 'bot', text: generateBotResponse(input) };\n\n        setChatHistory((prevHistory) => [...prevHistory, userMessage, botMessage]);\n        setInput('');\n    };\n\n    const generateBotResponse = (message) => {\n        if (message.toLowerCase().includes('hello')) {\n            return 'Oh, hi there! Feeling a bit off-center today?';\n        } else if (message.toLowerCase().includes('move')) {\n            return 'Please donâ€™t move me! I like being centered. ðŸ˜ ';\n        } else {\n            return 'Hmm, Iâ€™m not sure how to respond to that.';\n        }\n    };\n\n    useEffect(() => {\n        fetchData();\n    }, []);\n\n    useEffect(() => {\n        const handleResize = () => {\n            const newWidth = window.innerWidth;\n            const newHeight = window.innerHeight;\n\n            setWindowSize({ width: newWidth, height: newHeight });\n\n            if (newWidth < 600) {\n                setDivMessage('Why is it so cramped in here? ðŸ¥´');\n            } else if (newWidth > 1200) {\n                setDivMessage('I feel so exposed! ðŸ˜±');\n            } else {\n                setDivMessage('I am perfectly centered.');\n            }\n        };\n\n        window.addEventListener('resize', handleResize);\n        return () => window.removeEventListener('resize', handleResize);\n    }, []);\n\n    return (\n        <Container maxWidth=\"sm\" style={{ padding: '2rem', textAlign: 'center' }}>\n            <Typography variant=\"h4\" gutterBottom>\n                Centered Div Therapy\n            </Typography>\n            <Typography variant=\"body1\" gutterBottom style={{ marginBottom: '1rem', fontStyle: 'italic' }}>\n                {divMessage}\n            </Typography>\n            <Typography variant=\"body2\" style={{ marginBottom: '1rem' }}>\n                {`Window Size: ${windowSize.width}px x ${windowSize.height}px`}\n            </Typography>\n\n            {/* Chat Section */}\n            <Box\n                sx={{\n                    border: '1px solid #ccc',\n                    borderRadius: '10px',\n                    padding: '1rem',\n                    marginBottom: '1.5rem',\n                    height: '200px',\n                    overflowY: 'auto',\n                }}\n            >\n                {chatHistory.map((chat, index) => (\n                    <Typography\n                        key={index}\n                        variant=\"body1\"\n                        align={chat.type === 'user' ? 'right' : 'left'}\n                        style={{\n                            color: chat.type === 'user' ? 'blue' : 'green',\n                            marginBottom: '0.5rem',\n                        }}\n                    >\n                        {chat.text}\n                    </Typography>\n                ))}\n            </Box>\n            <form onSubmit={handleChatSubmit} style={{ marginBottom: '2rem' }}>\n                <TextField\n                    fullWidth\n                    variant=\"outlined\"\n                    label=\"Type your message\"\n                    value={input}\n                    onChange={(e) => setInput(e.target.value)}\n                    error={!!error}\n                    helperText={error}\n                    style={{ marginBottom: '1rem' }}\n                />\n                <Button\n                    variant=\"contained\"\n                    color=\"primary\"\n                    type=\"submit\"\n                    style={{ width: '100%' }}\n                >\n                    Send\n                </Button>\n            </form>\n\n            <Typography variant=\"h5\" gutterBottom>\n                {dataList.length > 0\n                    ? `Submitted Data (${dataList.length} items)`\n                    : 'No Data Submitted Yet'}\n            </Typography>\n\n            <List>\n                {dataList.map((item, index) => (\n                    <ListItem key={index}>\n                        <ListItemText\n                            primary={item.input}\n                            secondary={`Submitted on: ${item.timestamp}`}\n                        />\n                    </ListItem>\n                ))}\n            </List>\n        </Container>\n    );\n};\n\nexport default MainContent;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}