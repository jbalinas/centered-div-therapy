{"ast":null,"code":"var _jsxFileName = \"/Users/spookybiscuit/Projects/centered-div-therapy/src/components/LayoutMode.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { Box, Button, keyframes } from '@mui/material';\nimport CenteredDiv from './CenteredDiv';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst LayoutMode = () => {\n  _s();\n  const [currentLayout, setCurrentLayout] = useState('default');\n\n  // Define different layout styles\n  const layouts = {\n    default: {\n      display: 'flex',\n      justifyContent: 'center',\n      alignItems: 'center',\n      height: '300px'\n    },\n    grid: {\n      display: 'grid',\n      gridTemplateColumns: 'repeat(3, 1fr)',\n      gridGap: '10px',\n      height: '300px'\n    },\n    chaotic: {\n      position: 'relative',\n      height: '300px',\n      overflow: 'hidden' // Ensure chaotic elements do not leave the container\n    }\n  };\n  const generateRandomKeyframes = (containerWidth, containerHeight) => {\n    const maxX = containerWidth - 50; // Adjust based on element width (50px)\n    const maxY = containerHeight - 50; // Adjust based on element height (50px)\n\n    return keyframes`\n            0% {\n                transform: translate(0, 0);\n            }\n            25% {\n                transform: translate(${Math.random() * maxX}px, ${Math.random() * maxY}px);\n            }\n            50% {\n                transform: translate(${Math.random() * maxX}px, ${Math.random() * maxY}px);\n            }\n            75% {\n                transform: translate(${Math.random() * maxX}px, ${Math.random() * maxY}px);\n            }\n            100% {\n                transform: translate(0, 0);\n            }\n        `;\n  };\n  const generateChaos = containerRef => {\n    const containerWidth = containerRef.current.offsetWidth;\n    const containerHeight = containerRef.current.offsetHeight;\n    const chaosDivs = Array.from({\n      length: 5\n    }, (_, i) => {\n      const randomKeyframes = generateRandomKeyframes(containerWidth, containerHeight);\n      const randomDuration = `${Math.random() * 3 + 2}s`; // Random duration between 2s and 5s\n      const randomDelay = `${Math.random()}s`; // Random delay between 0s and 1s\n\n      return /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          position: 'absolute',\n          top: `${Math.random() * (containerHeight - 50)}px`,\n          left: `${Math.random() * (containerWidth - 50)}px`,\n          width: '50px',\n          height: '50px',\n          backgroundColor: 'rgba(255,0,0,0.5)',\n          animation: `${randomKeyframes} ${randomDuration} ease-in-out ${randomDelay} infinite`\n        }\n      }, i, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 17\n      }, this);\n    });\n    return chaosDivs;\n  };\n  const containerRef = React.useRef();\n  return /*#__PURE__*/_jsxDEV(Box, {\n    children: [/*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        display: 'flex',\n        justifyContent: 'center',\n        gap: '1rem',\n        marginBottom: '1rem'\n      },\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        variant: \"outlined\",\n        onClick: () => setCurrentLayout('default'),\n        children: \"Default Layout\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"outlined\",\n        onClick: () => setCurrentLayout('grid'),\n        children: \"Grid Layout\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"outlined\",\n        onClick: () => setCurrentLayout('chaotic'),\n        children: \"Chaotic Layout\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      ref: containerRef,\n      sx: {\n        border: '1px solid #ccc',\n        borderRadius: '8px',\n        ...layouts[currentLayout]\n      },\n      children: [currentLayout === 'chaotic' && generateChaos(containerRef), /*#__PURE__*/_jsxDEV(CenteredDiv, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 82,\n    columnNumber: 9\n  }, this);\n};\n_s(LayoutMode, \"NJFpXBP558Dv0YLbIlS7fss7b0g=\");\n_c = LayoutMode;\nexport default LayoutMode;\nvar _c;\n$RefreshReg$(_c, \"LayoutMode\");","map":{"version":3,"names":["React","useState","Box","Button","keyframes","CenteredDiv","jsxDEV","_jsxDEV","LayoutMode","_s","currentLayout","setCurrentLayout","layouts","default","display","justifyContent","alignItems","height","grid","gridTemplateColumns","gridGap","chaotic","position","overflow","generateRandomKeyframes","containerWidth","containerHeight","maxX","maxY","Math","random","generateChaos","containerRef","current","offsetWidth","offsetHeight","chaosDivs","Array","from","length","_","i","randomKeyframes","randomDuration","randomDelay","sx","top","left","width","backgroundColor","animation","fileName","_jsxFileName","lineNumber","columnNumber","useRef","children","gap","marginBottom","variant","onClick","ref","border","borderRadius","_c","$RefreshReg$"],"sources":["/Users/spookybiscuit/Projects/centered-div-therapy/src/components/LayoutMode.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { Box, Button, keyframes } from '@mui/material';\nimport CenteredDiv from './CenteredDiv';\n\nconst LayoutMode = () => {\n    const [currentLayout, setCurrentLayout] = useState('default');\n\n    // Define different layout styles\n    const layouts = {\n        default: {\n            display: 'flex',\n            justifyContent: 'center',\n            alignItems: 'center',\n            height: '300px',\n        },\n        grid: {\n            display: 'grid',\n            gridTemplateColumns: 'repeat(3, 1fr)',\n            gridGap: '10px',\n            height: '300px',\n        },\n        chaotic: {\n            position: 'relative',\n            height: '300px',\n            overflow: 'hidden', // Ensure chaotic elements do not leave the container\n        },\n    };\n\n    const generateRandomKeyframes = (containerWidth, containerHeight) => {\n        const maxX = containerWidth - 50; // Adjust based on element width (50px)\n        const maxY = containerHeight - 50; // Adjust based on element height (50px)\n\n        return keyframes`\n            0% {\n                transform: translate(0, 0);\n            }\n            25% {\n                transform: translate(${Math.random() * maxX}px, ${Math.random() * maxY}px);\n            }\n            50% {\n                transform: translate(${Math.random() * maxX}px, ${Math.random() * maxY}px);\n            }\n            75% {\n                transform: translate(${Math.random() * maxX}px, ${Math.random() * maxY}px);\n            }\n            100% {\n                transform: translate(0, 0);\n            }\n        `;\n    };\n\n    const generateChaos = (containerRef) => {\n        const containerWidth = containerRef.current.offsetWidth;\n        const containerHeight = containerRef.current.offsetHeight;\n\n        const chaosDivs = Array.from({ length: 5 }, (_, i) => {\n            const randomKeyframes = generateRandomKeyframes(containerWidth, containerHeight);\n            const randomDuration = `${Math.random() * 3 + 2}s`; // Random duration between 2s and 5s\n            const randomDelay = `${Math.random()}s`; // Random delay between 0s and 1s\n\n            return (\n                <Box\n                    key={i}\n                    sx={{\n                        position: 'absolute',\n                        top: `${Math.random() * (containerHeight - 50)}px`,\n                        left: `${Math.random() * (containerWidth - 50)}px`,\n                        width: '50px',\n                        height: '50px',\n                        backgroundColor: 'rgba(255,0,0,0.5)',\n                        animation: `${randomKeyframes} ${randomDuration} ease-in-out ${randomDelay} infinite`,\n                    }}\n                />\n            );\n        });\n        return chaosDivs;\n    };\n\n    const containerRef = React.useRef();\n\n    return (\n        <Box>\n            <Box sx={{ display: 'flex', justifyContent: 'center', gap: '1rem', marginBottom: '1rem' }}>\n                <Button variant=\"outlined\" onClick={() => setCurrentLayout('default')}>\n                    Default Layout\n                </Button>\n                <Button variant=\"outlined\" onClick={() => setCurrentLayout('grid')}>\n                    Grid Layout\n                </Button>\n                <Button variant=\"outlined\" onClick={() => setCurrentLayout('chaotic')}>\n                    Chaotic Layout\n                </Button>\n            </Box>\n            <Box\n                ref={containerRef}\n                sx={{ border: '1px solid #ccc', borderRadius: '8px', ...layouts[currentLayout] }}\n            >\n                {currentLayout === 'chaotic' && generateChaos(containerRef)}\n                <CenteredDiv />\n            </Box>\n        </Box>\n    );\n};\n\nexport default LayoutMode;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}