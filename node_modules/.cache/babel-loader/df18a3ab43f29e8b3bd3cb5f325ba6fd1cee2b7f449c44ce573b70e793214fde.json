{"ast":null,"code":"const express = require('express');\nconst bodyParser = require('body-parser');\nconst cors = require('cors');\nconst app = express();\nconst port = 5001;\n\n// Middleware\napp.use(cors());\napp.use(bodyParser.json());\n\n// In-memory storage for submitted data\nconst dataStore = [];\n\n// Routes\napp.get('/', (req, res) => {\n  res.send('Welcome to the backend!');\n});\napp.post('/data', (req, res) => {\n  const {\n    input\n  } = req.body;\n  if (input) {\n    dataStore.push(input);\n    res.status(200).send({\n      message: `Data received: ${input}`\n    });\n  } else {\n    res.status(400).send({\n      message: 'Invalid input'\n    });\n  }\n});\napp.get('/data', (req, res) => {\n  res.status(200).send(dataStore);\n});\n\n// Start server\napp.listen(port, () => {\n  console.log(`Server running on http://localhost:${port}`);\n});","map":{"version":3,"names":["express","require","bodyParser","cors","app","port","use","json","dataStore","get","req","res","send","post","input","body","push","status","message","listen","console","log"],"sources":["/Users/spookybiscuit/Projects/centered-div-therapy/src/components/MainContent.js"],"sourcesContent":["const express = require('express');\nconst bodyParser = require('body-parser');\nconst cors = require('cors');\n\nconst app = express();\nconst port = 5001;\n\n// Middleware\napp.use(cors());\napp.use(bodyParser.json());\n\n// In-memory storage for submitted data\nconst dataStore = [];\n\n// Routes\napp.get('/', (req, res) => {\n    res.send('Welcome to the backend!');\n});\n\napp.post('/data', (req, res) => {\n    const { input } = req.body;\n    if (input) {\n        dataStore.push(input);\n        res.status(200).send({ message: `Data received: ${input}` });\n    } else {\n        res.status(400).send({ message: 'Invalid input' });\n    }\n});\n\napp.get('/data', (req, res) => {\n    res.status(200).send(dataStore);\n});\n\n// Start server\napp.listen(port, () => {\n    console.log(`Server running on http://localhost:${port}`);\n});\n"],"mappings":"AAAA,MAAMA,OAAO,GAAGC,OAAO,CAAC,SAAS,CAAC;AAClC,MAAMC,UAAU,GAAGD,OAAO,CAAC,aAAa,CAAC;AACzC,MAAME,IAAI,GAAGF,OAAO,CAAC,MAAM,CAAC;AAE5B,MAAMG,GAAG,GAAGJ,OAAO,CAAC,CAAC;AACrB,MAAMK,IAAI,GAAG,IAAI;;AAEjB;AACAD,GAAG,CAACE,GAAG,CAACH,IAAI,CAAC,CAAC,CAAC;AACfC,GAAG,CAACE,GAAG,CAACJ,UAAU,CAACK,IAAI,CAAC,CAAC,CAAC;;AAE1B;AACA,MAAMC,SAAS,GAAG,EAAE;;AAEpB;AACAJ,GAAG,CAACK,GAAG,CAAC,GAAG,EAAE,CAACC,GAAG,EAAEC,GAAG,KAAK;EACvBA,GAAG,CAACC,IAAI,CAAC,yBAAyB,CAAC;AACvC,CAAC,CAAC;AAEFR,GAAG,CAACS,IAAI,CAAC,OAAO,EAAE,CAACH,GAAG,EAAEC,GAAG,KAAK;EAC5B,MAAM;IAAEG;EAAM,CAAC,GAAGJ,GAAG,CAACK,IAAI;EAC1B,IAAID,KAAK,EAAE;IACPN,SAAS,CAACQ,IAAI,CAACF,KAAK,CAAC;IACrBH,GAAG,CAACM,MAAM,CAAC,GAAG,CAAC,CAACL,IAAI,CAAC;MAAEM,OAAO,EAAE,kBAAkBJ,KAAK;IAAG,CAAC,CAAC;EAChE,CAAC,MAAM;IACHH,GAAG,CAACM,MAAM,CAAC,GAAG,CAAC,CAACL,IAAI,CAAC;MAAEM,OAAO,EAAE;IAAgB,CAAC,CAAC;EACtD;AACJ,CAAC,CAAC;AAEFd,GAAG,CAACK,GAAG,CAAC,OAAO,EAAE,CAACC,GAAG,EAAEC,GAAG,KAAK;EAC3BA,GAAG,CAACM,MAAM,CAAC,GAAG,CAAC,CAACL,IAAI,CAACJ,SAAS,CAAC;AACnC,CAAC,CAAC;;AAEF;AACAJ,GAAG,CAACe,MAAM,CAACd,IAAI,EAAE,MAAM;EACnBe,OAAO,CAACC,GAAG,CAAC,sCAAsChB,IAAI,EAAE,CAAC;AAC7D,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}