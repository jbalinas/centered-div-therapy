{"ast":null,"code":"var _jsxFileName = \"/Users/spookybiscuit/Projects/centered-div-therapy/src/components/CenteredDiv.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Box, Typography } from '@mui/material';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CenteredDiv = () => {\n  _s();\n  const [divMessage, setDivMessage] = useState('I am perfectly centered.');\n  const [windowSize, setWindowSize] = useState({\n    width: window.innerWidth,\n    height: window.innerHeight\n  });\n  useEffect(() => {\n    const handleResize = () => {\n      const newWidth = window.innerWidth;\n      setWindowSize({\n        width: newWidth,\n        height: window.innerHeight\n      });\n      if (newWidth < 600) {\n        setDivMessage('Why is it so cramped in here? ðŸ¥´');\n      } else if (newWidth > 1200) {\n        setDivMessage('I feel so exposed! ðŸ˜±');\n      } else {\n        setDivMessage('I am perfectly centered.');\n      }\n    };\n    window.addEventListener('resize', handleResize);\n    return () => window.removeEventListener('resize', handleResize);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(Box, {\n    sx: {\n      display: 'flex',\n      flexDirection: 'column',\n      alignItems: 'center',\n      justifyContent: 'center',\n      height: '300px',\n      border: '2px solid #000',\n      borderRadius: '10px',\n      textAlign: 'center',\n      padding: '1rem'\n    },\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h5\",\n      children: divMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"body2\",\n      children: `Window Size: ${windowSize.width}px x ${windowSize.height}px`\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 9\n  }, this);\n};\n_s(CenteredDiv, \"vz2MmM+/MA9rVsGPrFT2O0GcnQs=\");\n_c = CenteredDiv;\nexport default CenteredDiv;\nvar _c;\n$RefreshReg$(_c, \"CenteredDiv\");","map":{"version":3,"names":["React","useState","useEffect","Box","Typography","jsxDEV","_jsxDEV","CenteredDiv","_s","divMessage","setDivMessage","windowSize","setWindowSize","width","window","innerWidth","height","innerHeight","handleResize","newWidth","addEventListener","removeEventListener","sx","display","flexDirection","alignItems","justifyContent","border","borderRadius","textAlign","padding","children","variant","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/spookybiscuit/Projects/centered-div-therapy/src/components/CenteredDiv.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Box, Typography } from '@mui/material';\n\nconst CenteredDiv = () => {\n    const [divMessage, setDivMessage] = useState('I am perfectly centered.');\n    const [windowSize, setWindowSize] = useState({\n        width: window.innerWidth,\n        height: window.innerHeight,\n    });\n\n    useEffect(() => {\n        const handleResize = () => {\n            const newWidth = window.innerWidth;\n\n            setWindowSize({ width: newWidth, height: window.innerHeight });\n\n            if (newWidth < 600) {\n                setDivMessage('Why is it so cramped in here? ðŸ¥´');\n            } else if (newWidth > 1200) {\n                setDivMessage('I feel so exposed! ðŸ˜±');\n            } else {\n                setDivMessage('I am perfectly centered.');\n            }\n        };\n\n        window.addEventListener('resize', handleResize);\n        return () => window.removeEventListener('resize', handleResize);\n    }, []);\n\n    return (\n        <Box\n            sx={{\n                display: 'flex',\n                flexDirection: 'column',\n                alignItems: 'center',\n                justifyContent: 'center',\n                height: '300px',\n                border: '2px solid #000',\n                borderRadius: '10px',\n                textAlign: 'center',\n                padding: '1rem',\n            }}\n        >\n            <Typography variant=\"h5\">{divMessage}</Typography>\n            <Typography variant=\"body2\">{`Window Size: ${windowSize.width}px x ${windowSize.height}px`}</Typography>\n        </Box>\n    );\n};\n\nexport default CenteredDiv;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,GAAG,EAAEC,UAAU,QAAQ,eAAe;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEhD,MAAMC,WAAW,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACtB,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGT,QAAQ,CAAC,0BAA0B,CAAC;EACxE,MAAM,CAACU,UAAU,EAAEC,aAAa,CAAC,GAAGX,QAAQ,CAAC;IACzCY,KAAK,EAAEC,MAAM,CAACC,UAAU;IACxBC,MAAM,EAAEF,MAAM,CAACG;EACnB,CAAC,CAAC;EAEFf,SAAS,CAAC,MAAM;IACZ,MAAMgB,YAAY,GAAGA,CAAA,KAAM;MACvB,MAAMC,QAAQ,GAAGL,MAAM,CAACC,UAAU;MAElCH,aAAa,CAAC;QAAEC,KAAK,EAAEM,QAAQ;QAAEH,MAAM,EAAEF,MAAM,CAACG;MAAY,CAAC,CAAC;MAE9D,IAAIE,QAAQ,GAAG,GAAG,EAAE;QAChBT,aAAa,CAAC,kCAAkC,CAAC;MACrD,CAAC,MAAM,IAAIS,QAAQ,GAAG,IAAI,EAAE;QACxBT,aAAa,CAAC,uBAAuB,CAAC;MAC1C,CAAC,MAAM;QACHA,aAAa,CAAC,0BAA0B,CAAC;MAC7C;IACJ,CAAC;IAEDI,MAAM,CAACM,gBAAgB,CAAC,QAAQ,EAAEF,YAAY,CAAC;IAC/C,OAAO,MAAMJ,MAAM,CAACO,mBAAmB,CAAC,QAAQ,EAAEH,YAAY,CAAC;EACnE,CAAC,EAAE,EAAE,CAAC;EAEN,oBACIZ,OAAA,CAACH,GAAG;IACAmB,EAAE,EAAE;MACAC,OAAO,EAAE,MAAM;MACfC,aAAa,EAAE,QAAQ;MACvBC,UAAU,EAAE,QAAQ;MACpBC,cAAc,EAAE,QAAQ;MACxBV,MAAM,EAAE,OAAO;MACfW,MAAM,EAAE,gBAAgB;MACxBC,YAAY,EAAE,MAAM;MACpBC,SAAS,EAAE,QAAQ;MACnBC,OAAO,EAAE;IACb,CAAE;IAAAC,QAAA,gBAEFzB,OAAA,CAACF,UAAU;MAAC4B,OAAO,EAAC,IAAI;MAAAD,QAAA,EAAEtB;IAAU;MAAAwB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAa,CAAC,eAClD9B,OAAA,CAACF,UAAU;MAAC4B,OAAO,EAAC,OAAO;MAAAD,QAAA,EAAE,gBAAgBpB,UAAU,CAACE,KAAK,QAAQF,UAAU,CAACK,MAAM;IAAI;MAAAiB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAa,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACvG,CAAC;AAEd,CAAC;AAAC5B,EAAA,CA5CID,WAAW;AAAA8B,EAAA,GAAX9B,WAAW;AA8CjB,eAAeA,WAAW;AAAC,IAAA8B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}