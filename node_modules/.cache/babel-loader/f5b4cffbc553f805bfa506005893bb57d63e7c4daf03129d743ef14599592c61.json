{"ast":null,"code":"var _jsxFileName = \"/Users/spookybiscuit/Projects/centered-div-therapy/src/components/LayoutMode.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef } from 'react';\nimport { Box, Button, keyframes } from '@mui/material';\nimport CenteredDiv from './CenteredDiv';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst LayoutMode = () => {\n  _s();\n  const [currentLayout, setCurrentLayout] = useState('default');\n  const containerRef = useRef(null);\n\n  // Define different layout styles\n  const layouts = {\n    default: {\n      display: 'flex',\n      justifyContent: 'center',\n      alignItems: 'center',\n      height: '400px',\n      backgroundColor: '#ffffff'\n    },\n    grid: {\n      display: 'grid',\n      gridTemplateColumns: 'repeat(3, 1fr)',\n      gridGap: '10px',\n      height: '400px',\n      backgroundColor: '#ffffff'\n    },\n    chaotic: {\n      position: 'relative',\n      height: '400px',\n      width: '100%',\n      overflow: 'hidden',\n      backgroundImage: 'url(\"https://media.tenor.com/Ivb2PnLZzsUAAAAC/fire-elmo.gif\")',\n      backgroundSize: 'cover',\n      backgroundPosition: 'center',\n      backgroundRepeat: 'no-repeat'\n    }\n  };\n  const generateBouncingKeyframes = (startX, startY, maxX, maxY) => {\n    return keyframes`\n            0% { transform: translate(${startX}px, ${startY}px); }\n            25% { transform: translate(${maxX}px, ${startY}px); }\n            50% { transform: translate(${maxX}px, ${maxY}px); }\n            75% { transform: translate(${startX}px, ${maxY}px); }\n            100% { transform: translate(${startX}px, ${startY}px); }\n        `;\n  };\n  const generateChaos = () => {\n    const container = containerRef.current;\n    if (!container) return null;\n    const containerWidth = container.offsetWidth;\n    const containerHeight = container.offsetHeight;\n    const chaosDivs = Array.from({\n      length: 5\n    }, (_, i) => {\n      // Starting positions adjusted to include the full range\n      const startX = Math.random() * (containerWidth - 50); // Full width, no offset restriction\n      const startY = Math.random() * (containerHeight - 50); // Full height, no offset restriction\n\n      // Maximum movement range (ensures they don’t exceed the boundaries)\n      const maxX = containerWidth - 50; // Adjust for element size (50px)\n      const maxY = containerHeight - 50; // Adjust for element size (50px)\n\n      const keyframes = generateBouncingKeyframes(startX, startY, maxX, maxY);\n      const randomDuration = `${Math.random() * 3 + 2}s`; // Random duration between 2s and 5s\n\n      return /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          position: 'absolute',\n          top: 0,\n          left: 0,\n          width: '50px',\n          height: '50px',\n          backgroundColor: 'rgba(255,0,0,0.5)',\n          animation: `${keyframes} ${randomDuration} linear infinite`\n        }\n      }, i, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 17\n      }, this);\n    });\n    return chaosDivs;\n  };\n  return /*#__PURE__*/_jsxDEV(Box, {\n    children: [/*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        display: 'flex',\n        justifyContent: 'center',\n        gap: '0.5rem',\n        marginBottom: '1rem'\n      },\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        variant: \"outlined\",\n        onClick: () => setCurrentLayout('default'),\n        children: \"Default Layout\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"outlined\",\n        onClick: () => setCurrentLayout('grid'),\n        children: \"Grid Layout\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"outlined\",\n        onClick: () => setCurrentLayout('chaotic'),\n        children: \"Chaotic Layout\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      ref: containerRef,\n      sx: {\n        border: '1px solid #ccc',\n        borderRadius: '8px',\n        ...layouts[currentLayout]\n      },\n      children: [currentLayout === 'chaotic' && generateChaos(), /*#__PURE__*/_jsxDEV(CenteredDiv, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 86,\n    columnNumber: 9\n  }, this);\n};\n_s(LayoutMode, \"NJFpXBP558Dv0YLbIlS7fss7b0g=\");\n_c = LayoutMode;\nexport default LayoutMode;\nvar _c;\n$RefreshReg$(_c, \"LayoutMode\");","map":{"version":3,"names":["React","useState","useRef","Box","Button","keyframes","CenteredDiv","jsxDEV","_jsxDEV","LayoutMode","_s","currentLayout","setCurrentLayout","containerRef","layouts","default","display","justifyContent","alignItems","height","backgroundColor","grid","gridTemplateColumns","gridGap","chaotic","position","width","overflow","backgroundImage","backgroundSize","backgroundPosition","backgroundRepeat","generateBouncingKeyframes","startX","startY","maxX","maxY","generateChaos","container","current","containerWidth","offsetWidth","containerHeight","offsetHeight","chaosDivs","Array","from","length","_","i","Math","random","randomDuration","sx","top","left","animation","fileName","_jsxFileName","lineNumber","columnNumber","children","gap","marginBottom","variant","onClick","ref","border","borderRadius","_c","$RefreshReg$"],"sources":["/Users/spookybiscuit/Projects/centered-div-therapy/src/components/LayoutMode.js"],"sourcesContent":["import React, { useState, useRef } from 'react';\nimport { Box, Button, keyframes } from '@mui/material';\nimport CenteredDiv from './CenteredDiv';\n\nconst LayoutMode = () => {\n    const [currentLayout, setCurrentLayout] = useState('default');\n    const containerRef = useRef(null);\n\n    // Define different layout styles\n    const layouts = {\n        default: {\n            display: 'flex',\n            justifyContent: 'center',\n            alignItems: 'center',\n            height: '400px',\n            backgroundColor: '#ffffff',\n        },\n        grid: {\n            display: 'grid',\n            gridTemplateColumns: 'repeat(3, 1fr)',\n            gridGap: '10px',\n            height: '400px',\n            backgroundColor: '#ffffff', \n        },\n        chaotic: {\n            position: 'relative',\n            height: '400px',\n            width: '100%',\n            overflow: 'hidden', \n            backgroundImage: 'url(\"https://media.tenor.com/Ivb2PnLZzsUAAAAC/fire-elmo.gif\")',\n            backgroundSize: 'cover',\n            backgroundPosition: 'center',\n            backgroundRepeat: 'no-repeat',\n        },\n    };\n\n    const generateBouncingKeyframes = (startX, startY, maxX, maxY) => {\n        return keyframes`\n            0% { transform: translate(${startX}px, ${startY}px); }\n            25% { transform: translate(${maxX}px, ${startY}px); }\n            50% { transform: translate(${maxX}px, ${maxY}px); }\n            75% { transform: translate(${startX}px, ${maxY}px); }\n            100% { transform: translate(${startX}px, ${startY}px); }\n        `;\n    };\n\n    const generateChaos = () => {\n        const container = containerRef.current;\n        if (!container) return null;\n\n        const containerWidth = container.offsetWidth;\n        const containerHeight = container.offsetHeight;\n\n        const chaosDivs = Array.from({ length: 5 }, (_, i) => {\n            // Starting positions adjusted to include the full range\n            const startX = Math.random() * (containerWidth - 50); // Full width, no offset restriction\n            const startY = Math.random() * (containerHeight - 50); // Full height, no offset restriction\n\n            // Maximum movement range (ensures they don’t exceed the boundaries)\n            const maxX = containerWidth - 50; // Adjust for element size (50px)\n            const maxY = containerHeight - 50; // Adjust for element size (50px)\n\n            const keyframes = generateBouncingKeyframes(startX, startY, maxX, maxY);\n            const randomDuration = `${Math.random() * 3 + 2}s`; // Random duration between 2s and 5s\n\n            return (\n                <Box\n                    key={i}\n                    sx={{\n                        position: 'absolute',\n                        top: 0,\n                        left: 0,\n                        width: '50px',\n                        height: '50px',\n                        backgroundColor: 'rgba(255,0,0,0.5)',\n                        animation: `${keyframes} ${randomDuration} linear infinite`,\n                    }}\n                />\n            );\n        });\n\n        return chaosDivs;\n    };\n\n    return (\n        <Box>\n            <Box sx={{ display: 'flex', justifyContent: 'center', gap: '0.5rem', marginBottom: '1rem'}}>\n                <Button variant=\"outlined\" onClick={() => setCurrentLayout('default')}>\n                    Default Layout\n                </Button>\n                <Button variant=\"outlined\" onClick={() => setCurrentLayout('grid')}>\n                    Grid Layout\n                </Button>\n                <Button variant=\"outlined\" onClick={() => setCurrentLayout('chaotic')}>\n                    Chaotic Layout\n                </Button>\n            </Box>\n            <Box\n                ref={containerRef}\n                sx={{\n                    border: '1px solid #ccc',\n                    borderRadius: '8px',\n                    ...layouts[currentLayout],\n                }}\n            >\n                {currentLayout === 'chaotic' && generateChaos()}\n                <CenteredDiv />\n            </Box>\n        </Box>\n    );\n};\n\nexport default LayoutMode;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}